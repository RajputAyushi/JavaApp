pipeline {
    agent any
environment {
        // Use Jenkins Credentials to securely access the SonarQube token
        SONAR_TOKEN = credentials('sonartoken')  // Replace 'sonar-token' with the ID of the secret you stored in Jenkins

tools {
maven 'mymvn'
}

    stages {
        stage('checkout') {
            steps {
                echo "passeed"
            }}
stage('Build'){
steps { 
  echo "build started"
   sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
 echo "build successful"
    }

}
stage('Sonarqube code scanning'){
steps {
       scripts{
         withSonarQubeEnv('SonarQube') {  // This assumes you have SonarQube configured in Jenkins global settings
                      sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app '
                        sh """
                        mvn sonar:sonar \
                            -Dsonar.projectKey=${JOB_NAME} \
                            -Dsonar.projectName=${JOB_NAME} \
                            -Dsonar.login=${SONAR_TOKEN} \
                            -Dsonar.host.url=http://10.0.2.15:9000  // Replace with your SonarQube server URL
                        """
                    }
}
}
}}
}
